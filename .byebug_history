exit
data
exit
params
exit
all_prediction_errors.count
all_prediction_errors[0]
all_prediction_errors
continue
all_prediction_errors
all_prediction_errors.last
all_prediction_errors
all_prediction_errors.first
all_prediction_errors.count.first
all_prediction_errors.count
all_prediction_errors
continue
sections[10].count
sections[9].count
sections[8].count
sections[7].count
sections[8].count
sections[6].count
sections[5].count
sections[4].count
sections[3].count
sections[1].count
sections[0].count
sections[0]
sections= all_prediction_errors.in_groups(10,false)
all_prediction_errors
exit
continue
score
continue
score
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
counter
continue
score
counter
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
score
continue
.continue
score
colab_filtering
score
recording
exit
@ratings_second
@ratings_first
continue
@ratings_first
@ratings_second
continue
@ratings_first
@ratings_second
continue
@ratings_second
@ratings_first
exit
continue
@state
exit
@state
continue
state
u.neighborhood_increments("instantaneousExcitement")exit
@state
continue
state
exit
state
exit
fraction.last["instantaneousExcitement"]
fraction.first["instantaneousExcitement"]
fraction.first["instantaneousEcitement"]
fraction
bigger_than_six
continue
bigger_than_six
bigger_than_three
continue
exit
user_rating
rating
continue
rating.value
rating
user.rating_average
user_rating.value
user_rating
exit
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
continue
r.entries.count
